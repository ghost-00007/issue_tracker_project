env:
  APP_NAME: issuetrackerdev
  APP_DIR: /home/ec2-user/apps/
  DEPLOY_DIR: /home/ec2-user/apps/issuetrackerdev
  WORKING_DIR: /home/ec2-user/apps/issuetrackerdev/issue_tracker_project/
  MANAGE_PATH: /home/ec2-user/apps/issuetrackerdev/issue_tracker_project/
  GUNICORN_SERVICE: issuetrackerdev.service
  GUNICORN_SOCKET: issuetrackerdev.socket
  NGINX_CONF_SRC: /home/ec2-user/service/issuetrackerdev
  NGINX_CONF_DEST: /etc/nginx/sites-available/issuetrackerdev

...

- name: Deploy Django App (Direct or via SSH)
  if: runner.os != 'Linux'
  uses: appleboy/ssh-action@v1.0.0
  with:
    host: ${{ secrets.SERVER_HOST }}
    username: ${{ secrets.SERVER_USER }}
    key: ${{ secrets.SERVER_SSH_KEY }}
    port: 22
    envs: APP_NAME,APP_DIR,DEPLOY_DIR,WORKING_DIR,GUNICORN_SERVICE,GUNICORN_SOCKET,NGINX_CONF_SRC,NGINX_CONF_DEST,MANAGE_PATH
    script: |
      echo "Deploying app: $APP_NAME"
      if [ ! -d "$DEPLOY_DIR" ]; then
        sudo mkdir -p "$DEPLOY_DIR"
        sudo chmod -R 777 "$DEPLOY_DIR"
      fi

      if [ -d "$DEPLOY_DIR/.git" ]; then
        cd $DEPLOY_DIR && git reset --hard HEAD && git clean -fd && git pull origin main
      else
        git clone https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} $DEPLOY_DIR
      fi

      cd $WORKING_DIR
      if [ ! -d "venv" ]; then
        python3 -m venv venv
      fi
      source venv/bin/activate
      pip install --upgrade pip
      pip install -r requirements.txt

      cd $MANAGE_PATH
      python manage.py makemigrations
      python manage.py migrate
      python manage.py collectstatic --noinput

      sudo cp /home/ec2-user/service/$GUNICORN_SERVICE /etc/systemd/system/
      sudo cp /home/ec2-user/service/$GUNICORN_SOCKET /etc/systemd/system/
      sudo systemctl daemon-reload
      sudo systemctl start $GUNICORN_SOCKET
      sudo systemctl enable $GUNICORN_SOCKET
      sudo systemctl restart $GUNICORN_SERVICE

      sudo cp $NGINX_CONF_SRC $NGINX_CONF_DEST
      [ ! -L /etc/nginx/sites-enabled/$APP_NAME ] && sudo ln -s $NGINX_CONF_DEST /etc/nginx/sites-enabled/$APP_NAME
      sudo nginx -t
      sudo systemctl restart nginx
